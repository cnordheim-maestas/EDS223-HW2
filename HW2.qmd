---
title: "Homework Assignment 2: Exploring patterns of environmental justice"
author: "Caitlin Nordheim-Maestas"
date: "`r Sys.Date()`"
format: html
---

# Setup

```{r}
#| message: false
#| warning: false

library(tidyverse)
library(sf)
library(tmap)
library(here)
library(viridisLite) # colors
library(janitor)
library(kableExtra) # pretty table
library(patchwork) # combine plots

# load in data 
#ejscreen
ej <- st_read(here::here("data", "ejscreen", "EJSCREEN_2023_BG_StatePct_with_AS_CNMI_GU_VI.gdb"),  quiet = TRUE)
# check valid
unique(st_is_valid(ej)) # TRUE, yay

# holc
holc <- st_read(here::here("data", "mapping-inequality", "mapping-inequality-los-angeles.json"), quiet = TRUE) %>% 
  st_make_valid() # was not valid before, is now
unique(st_is_valid(holc)) # TRUE, yay!

# bird
bird <- st_read(here::here("data", "gbif-birds-LA", "gbif-birds-LA.shp"), quiet = TRUE)
# check and make valid
unique(st_is_valid(bird)) # TRUE, yay

# let's make a custom, colorblind-friendly color palette for the grades
# hex codes come from colorblind-friendly Paul Tol color palette (the "bright" one)
grade_colors <-c(
  "A"  = "#228833",
  "B"  = "#4477AA",
  "C"  = "#CCBB44",
  "D"  =  "#EE6677",
  "NA" = "black",
  "NA_real" = "black")
```


# Part 1

## Part 1.1

Create a map of historical redlining neighborhoods

```{r}
#| message: false
#| warning: false
#| fig-height: 6
#| fig-width: 6

m1.1 <- tm_shape(holc) + # import holc geo data
  tm_basemap("Esri.WorldGrayCanvas") + # dull background that still has geo info
  tm_graticules() + # to get our bearings
  # fill by HOLC "grade" assigned
  tm_fill(fill = "grade", # each hold grade a different color
          fill.scale = tm_scale(values =  # assigning colors manually to match the historical figures
                                 grade_colors),
          # this matches historical redlining maps in the metadata
          # and is colorblind friendly^^
          fill.legend = tm_legend(title = "HOLC Grade")) +
   tm_borders(col = "black", lwd = 0.5) + # makes it look more refined with borders
  tm_title("HOLC Grade Designations in Los Angeles") + # add title
# add map elements
  tm_compass(show.labels = 1, position = c("right","top")) + # compas
  tm_scalebar(position = c("right", "bottom")) + # scalebar
  tm_credits("Data Source: Digital Scholarship Lab", position = c("right", "bottom")) # data credits

m1.1
```

## Part 1.2

Create a table summarizing:

- the percentage of census block groups that fall within each HOLC grade

- Also include the percent of census black groups that don’t fall within a HOLC grade

- Hint: The HOLC data contains the grades and the EJScreen data contains the census blocks, so you will need to combine the data spatially before doing summary statistics. Once you combine and no longer need the geometries, you can use st_drop_geometry().

```{r}
#| message: false
#| warning: false
#| fig-height: 6
#| fig-width: 6

# filter ej data to just LA county
ej.la <- ej %>%
  filter(CNTY_NAME == "Los Angeles County")

# crs check!!
# CRS custom warning messages
if(st_crs(ej.la) != st_crs(holc)){
  warning("coordinate refrence systems do not match")}

# let;s fix it
st_crs(ej.la) == st_crs(holc) # false
ej.la <- st_transform(ej.la, crs= st_crs(holc)) # set to same as holc
st_crs(ej.la) == st_crs(holc) # true, yay!

# JOIN 
# join x,y adds y columns to x
ej_holc <- st_join(ej.la, holc) %>%
  clean_names() %>% # bc the caps are driving me crazy
  st_drop_geometry() # no longer needed

### summary stats
# the percentage of "census block groups" that fall within each HOLC grade
# percent of census block groups that don’t fall within a HOLC grade
# total rows #nrow(ej_holc) # 8988
ej_holc %>% 
  group_by(grade) %>% 
  # number in this group/ total rows *100 %
  #rounded to 2 decimal places
 summarise(
    Percent = round((n() / 8988) * 100, 2)) %>% 
  mutate(Percent = paste0(Percent, "%")) %>% 
  rename(HOLC_Grade = grade) %>%   # capitalize for pretty table
  st_drop_geometry() %>% 
  # pretty table
  kbl(booktabs = T, caption = "Census block groups and percent") %>%
  kable_styling(latex_options = "striped")
```

## Part 1.3

Create at least two visualizations summarizing current conditions (from the EJScreen data) within HOLC grades using the mean of the following variables (you may combine variables or create separate plots):

% low income
percentile for Particulate Matter 2.5
percentile for low life expectancy
Use ggplot for your visualizations! You will first need to calculate mean of each variable grouped by HOLC grade.

```{r fig.cap=""}
#| message: false
#| warning: false
#| fig-height: 6
#| fig-width: 6

## Wrangle means
means <- ej_holc %>% 
  group_by(grade) %>% # for each grade calculate:
  summarize(low_income_mean = mean(lowincpct, na.rm = TRUE),
            pm25_mean = mean(d2_pm25, na.rm = TRUE),
            life_exp_pct_mean = mean(lifeexppct, na.rm = TRUE)) %>% 
            # make more intuitive (actual percents not proportions)
            mutate(pct_low_income = low_income_mean * 100) %>% 
             mutate(pct_le = life_exp_pct_mean * 100)

### Low Income plot
low_income <- means %>%  
  ggplot(aes(x = grade, y = pct_low_income, fill = grade)) + # color by grade for fun
  geom_col() + # bar chart
  scale_fill_manual(values = grade_colors, na.value = "black") + # custom, colorblind friendly colors
  labs(
    x = "HOLC Grade", # grade on x
    y = "Percent Low Income Within Grade (%)", # percent 
    title = "Low Income") + # add title
  theme_light() + # clean theme
  theme(legend.position = "none") # legend does not add anything just fun colors

### PM
pm <- means %>%  
  ggplot(aes(x = grade, y = pm25_mean, fill = grade)) + # color by grade for fun
  geom_col() + # bar chart
  scale_fill_manual(values = grade_colors, na.value = "black") + # custom, colorblind friendly colors
  labs(
    x = "HOLC Grade", # grade on x
    y = "Percentile of PM 2.5 Pollution",
    title = "PM Pollution") + # add title
  theme_light() + # clean theme
  theme(legend.position = "none") # legend does not add anything just fun colors

### life expectancy
le <- means %>%  
  ggplot(aes(x = grade, y = pct_le, fill = grade)) + # color by grade for fun
  geom_col() + # bar chart
  scale_fill_manual(values = grade_colors, na.value = "black") + # custom, colorblind friendly colors
  labs(
    x = "HOLC Grade", # grade on x
    y = "Low LifeExpectancy",
    title = "Low Life\nExpectancy") + # add title
  theme_light() + # clean theme
  theme(legend.position = "none") # legend does not add anything just fun colors

# combine with patchwork and label a, b, c
barplot <- (low_income | pm | le) +
  plot_annotation(tag_levels = "A") +
    plot_annotation(
    title = "Conditions Within HOLC Grade",
    tag_levels = "A"
  ) &
  theme(plot.tag = element_text(size = 14, face = "bold"))
barplot
```

```{r fig.cap=""}
## mulitvariate plot
means %>%  
  ggplot(aes(x = grade, y = pct_le, color = pm25_mean)) + # color by pm 2.5
  geom_point(size = 10) + 
  labs(
    x = "HOLC Grade", # grade on x
    y = "Percent Low Life Expectancy Within Grade (%)", # low life expectancy on y
    title = "Low Life Expectancy & PM 2.5 by HOLC grade", # title
    color = "PM 2.5 Percentile" ) + # for legend title
  scale_color_viridis_c( 
    option = "plasma",   # blueish to yellow
    breaks = seq(20, 60, by = 5) ) +  # specify legend breaks
  theme_light() + # clean theme
    theme( # legend specs
    legend.position = "right",
    legend.title = element_text(face = "bold", size = 11),
    legend.text = element_text(size = 10))
```


## Part 1.4 (COME BACK TO THIS)

- Write a brief paragraph reflecting on these results

- Interpret the patterns you observe in your results

- Discuss potential relationships between historical redlining grades and current environmental/socioeconomic conditions


# Part 2

A figure summarizing the percent of observations within redlined neighborhoods within each HOLC grade

Create a visualizations that shows:

The percentage of bird observations within each HOLC grade
Include an appropiate title, axis labels, and legend
Hints: Ensure the bird observations and HOLC dataset have matching CRS’, then perform a spatial join to assign each bird observations to a corresponding HOLC grade.

## Part 2 setup

```{r}
## crs check for bird data
if(st_crs(bird) != st_crs(holc)){
  warning("coordinate refrence systems do not match")}

# double check
st_crs(bird) == st_crs(holc) # true, all good!

# checked in first chunk if the geometry is valid
# exploratory vis of the data (commented out to avoid uneeded plots for Ale when grading)
Quick_vis_birds <- tm_shape(holc) + # import holc geo data
  tm_basemap("Esri.WorldGrayCanvas") + # dull background that still has geo info
  tm_graticules() + # to get our bearings
  tm_basemap("Esri.WorldGrayCanvas") + # dull background that still has geo info
  tm_graticules() + # to get our bearings
  # fill by HOLC "grade" assigned
  tm_fill(fill = "grade", # each hold grade a different color
          fill.scale = tm_scale(values =  # assigning colors manually to match the historical figures
                                 grade_colors),
          # this matches historical redlining maps in the metadata
          fill.legend = tm_legend(title = "HOLC Grade")) +
   tm_borders(col = "black", lwd = 0.5) +
   tm_shape(bird) +
  tm_symbols(fill = "red" , fill_alpha = 0.2, size = 0.2)
#Quick_vis_birds # <- exploratory so commented out

# join the holc and bird spatially
# note: this is one method to do this, st_join + group_by OR
# aggregate(x = ..., by = ..., FUN = mean)
bird_holc <- st_join(holc, bird) # keep only bird observations that occur in holc
# check it worked
# head(bird_holc) commented out for a clean markdown, but it worked

# to calculate the percent we need the total obs
nrow(bird_holc) # 135,682 observations of birds within holc

birdholc_summary <- bird_holc %>% 
  group_by(grade) %>% # within each holc grade calculate:
  summarise(
  percent = round((n() / 135682) * 100, 2)) %>% # the percent of bird obs
  mutate(percent = paste0(percent, "%")) %>% # to make pretty output make it a string of tha value + % size
  st_drop_geometry() # dont need anymore

# pretty table (commented out to save Ale time from reading uneeded things)
# birdholc_summary %>% 
#     kbl(booktabs = T, caption = "Percent of bird observations\nin each HOLC grade") %>%
#   kable_styling(latex_options = "striped")

```

## Part 2.1

```{r fig.cap=""}
#| message: false
#| warning: false
#| fig-height: 6
#| fig-width: 6
#|
birdholc_summary %>%  
  ggplot(aes(x = grade, y = percent, fill = grade)) + # color by grade for fun
  geom_col() + # bar chart
  scale_fill_manual(values = grade_colors, na.value = "black") + # custom, colorblind friendly colors
  labs(
    x = "HOLC Grade", # grade on x
    y = "Mean Percent of Bird Observations",
    title = "Bird Observations by HOLC grade") + # add title
  theme_light() + # clean theme
  theme(legend.position = "none") # legend does not add anything just fun colors
```

## Part 2.2 (COME BACK)

Why might we have obtained different results in our analysis? What did the paper consider that we did not?

Paper found more bird obs in A than the rest, b,c,d look the same

we did not account for any important covariates like differences  in  present  day  vegetation,  open  space,  population  density



